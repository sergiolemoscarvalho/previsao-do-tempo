{"version":3,"sources":["App.js","index.js"],"names":["App","useState","city","setCity","erro","setErro","txtBtn","setTextBtn","weatherForecast","setWeatherForecast","setGeoLocation","useEffect","fetch","then","response","json","data","className","href","id","type","value","onChange","event","target","onClick","status","location","name","region","current","temp_c","src","condition","icon","alt","text","feelslike_c","uv","humidity","wind_kph","wind_dir","vis_km","pressure_mb","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"sLAkIeA,MA/Hf,WAAgB,IAAD,EAEWC,mBAAS,IAFpB,mBAENC,EAFM,KAEAC,EAFA,OAGWF,mBAAS,IAHpB,mBAGNG,EAHM,KAGAC,EAHA,OAIgBJ,mBAAS,aAJzB,mBAINK,EAJM,KAIEC,EAJF,OAKiCN,mBAAS,MAL1C,mBAKNO,EALM,KAKWC,EALX,OAMyBR,mBAAS,MANlC,mBAMOS,GANP,WAyDb,OAhCAC,qBAAU,WAbRC,MAAK,oFAEHC,MAAK,SAACC,GACN,OAAOA,EAASC,UACfF,MAAM,SAACG,GACRN,EAAgBM,GAEhBb,EAAQa,EAAKd,WASd,IA+BD,gCACE,qBAAKe,UAAU,mDAAf,SACE,mBAAGA,UAAU,eAAeC,KAAK,UAAjC,qCAIF,sBAAMD,UAAU,YAAYE,GAAG,SAA/B,SACE,sBAAKF,UAAU,YAAf,UACE,mEACA,mBAAGA,UAAU,OAAb,iFAGA,qBAAKA,UAAU,WAAf,SACE,sBAAKA,UAAU,WAAf,UACI,uBAAOG,KAAK,OAAOH,UAAU,eAAeI,MAAOnB,EAAMoB,SAvB9C,SAACC,GACxBpB,EAAQoB,EAAMC,OAAOH,OACrBhB,EAAQ,OAsBI,wBAAQY,UAAU,8BAA8BQ,QA5ChC,WAC5BlB,EAAW,eACXK,MAAK,0FACgFV,EADhF,qBAEAW,MAAK,SAAEC,GACR,GAAuB,MAApBA,EAASY,OAGV,OAFAnB,EAAW,aACXJ,EAAS,IACFW,EAASC,OACY,MAApBD,EAASY,SACjBnB,EAAW,aACXJ,EAAS,IACTE,EAAQ,uDAETQ,MAAM,SAACG,GACRP,EAAoBO,OA6BZ,SAAiFV,SAIvF,qBAAKW,UAAU,WAAf,SACE,qBAAKA,UAAU,WAAf,SACG,mBAAGA,UAAU,eAAb,SAA6Bb,QAajCI,EAEG,sBAAKS,UAAU,WAAf,UACE,sBAAKA,UAAY,SAAjB,UACA,+BAAKT,EAAgBmB,SAASC,KAA9B,MAAuCpB,EAAgBmB,SAASE,UAChE,qBAAIZ,UAAU,YAAd,UAA2BT,EAAgBsB,QAAQC,OAAnD,aAEA,sBAAKd,UAAU,mCAAf,UACE,qBAAKe,IAAKxB,EAAgBsB,QAAQG,UAAUC,KAAMC,IAAI,SACtD,6BAAK3B,EAAgBsB,QAAQG,UAAUG,UAEzC,sBAAKnB,UAAU,SAAf,UACE,6DAAuBT,EAAgBsB,QAAQO,YAA/C,UACA,qBAAIpB,UAAU,KAAd,2BAA+BT,EAAgBsB,QAAQQ,GAAvD,OACA,qBAAIrB,UAAU,KAAd,sBAA6BT,EAAgBsB,QAAQS,SAArD,OACA,qBAAItB,UAAU,KAAd,kCAAyCT,EAAgBsB,QAAQU,SAAjE,WACA,qBAAIvB,UAAU,KAAd,qCAAsCT,EAAgBsB,QAAQW,SAA9D,OACA,qBAAIxB,UAAU,KAAd,2BAAkCT,EAAgBsB,QAAQY,OAA1D,SACA,qBAAIzB,UAAU,KAAd,yBAA6BT,EAAgBsB,QAAQa,YAArD,gBAMF,cCpHhBC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.d67d1a6e.chunk.js","sourcesContent":["import { useState } from 'react'\r\nimport { useEffect } from 'react'\r\n\r\nfunction App() {\r\n  \r\n  const [city, setCity] = useState(\"\");\r\n  const [erro, setErro] = useState(\"\");\r\n  const [txtBtn, setTextBtn] = useState(\"Pesquisar\");\r\n  const [weatherForecast, setWeatherForecast] = useState(null);\r\n  const [geoLocation, setGeoLocation] = useState(null);\r\n  \r\n\r\n\r\n  const searchGeoLocation = () => {\r\n\r\n    fetch (\r\n      `http://api.ipstack.com/201.80.107.81?access_key=9aadc0cb4c4ade9863b003d0a66b64a7`\r\n    ).then((response) => {\r\n      return response.json();\r\n    }).then ((data) => {\r\n      setGeoLocation (data);\r\n      \r\n      setCity(data.city)\r\n      // setWeatherForecast(data.city)\r\n    });\r\n  }\r\n\r\n  \r\n  useEffect(() => {\r\n    searchGeoLocation()\r\n   \r\n  }, [])\r\n\r\n  const searchForecastWeather = () => {\r\n    setTextBtn(\"Buscando...\");\r\n    fetch (\r\n      `http://api.weatherapi.com/v1/current.json?key=cdbfddfed5ef4d32817233137212010&q=${city}&lang=pt\r\n      `).then(( response ) => {\r\n        if(response.status === 200){\r\n          setTextBtn(\"Pesquisar\");\r\n          setCity ('');\r\n          return response.json();\r\n        }else if( response.status === 400){\r\n          setTextBtn(\"Pesquisar\");\r\n          setCity ('');\r\n          setErro('Infelizmente não encontramos nenhum registro');\r\n        }\r\n      }).then ((data) => {\r\n        setWeatherForecast (data);\r\n      });\r\n    \r\n  };\r\n\r\n  const handleCityChange = (event) => {\r\n    setCity(event.target.value);\r\n    setErro('');\r\n  };\r\n\r\n  \r\n\r\n  return (\r\n   \r\n    <div>\r\n      <nav className=\"navbar navbar-expand-md navbar-dark bg-dark mb-4\">\r\n        <a className=\"navbar-brand\" href=\"#search\">\r\n            Previsão do tempo {}\r\n        </a>\r\n      </nav>\r\n      <main className=\"container\" id=\"search\">\r\n        <div className=\"jumbotron\">\r\n          <h1>Verifique a previsão do tempo </h1>\r\n          <p className=\"lead\">\r\n            Digite sua cidade no campo abaixo e em seguida clique em pesquisar.\r\n          </p>\r\n          <div className=\"row mb-4\">\r\n            <div className=\"col-md-6\">\r\n                <input type=\"text\" className=\"form-control\" value={city} onChange={handleCityChange} />\r\n                <button className=\"btn btn-lg btn-primary mt-3\" onClick={searchForecastWeather}>{txtBtn}</button>\r\n                {/* <button className=\"btn btn-lg btn-primary mt-3\" onClick={searchGeoLocation}>{txtBtn}</button> */}\r\n            </div>\r\n          </div>\r\n          <div className=\"row mb-4\">\r\n            <div className=\"col-md-6\">\r\n               <p className=\"text-danger \">{erro}</p>\r\n            </div>\r\n          </div>\r\n\r\n          {/* {geoLocation ? (\r\n             <div className=\"row mt-4\">\r\n              <div className = \"col-12\">\r\n              <h3>{geoLocation.country_name} | {geoLocation.city}</h3>\r\n\r\n              </div></div>\r\n          ) :null\r\n          } */}\r\n\r\n          {weatherForecast ? (\r\n              \r\n              <div className=\"row mt-4\">\r\n                <div className = \"col-12\">\r\n                <h3>{weatherForecast.location.name} | {weatherForecast.location.region}</h3>\r\n                <h1 className=\"display-1\">{weatherForecast.current.temp_c}°</h1>\r\n                </div>\r\n                <div className=\"col-12 d-flex align-items-center\">\r\n                  <img src={weatherForecast.current.condition.icon} alt=\"icon\" />\r\n                  <h4>{weatherForecast.current.condition.text}</h4>\r\n                </div>\r\n                <div className=\"col-12\">\r\n                  <h6>Sensação térmica: {weatherForecast.current.feelslike_c}°</h6>\r\n                  <h6 className=\"h6\">Índice UV: {weatherForecast.current.uv} </h6>\r\n                  <h6 className=\"h6\">Umidade: {weatherForecast.current.humidity}%</h6>\r\n                  <h6 className=\"h6\">Velocidade do vento: {weatherForecast.current.wind_kph} Km/h</h6>\r\n                  <h6 className=\"h6\">Direção do vento: {weatherForecast.current.wind_dir} </h6>\r\n                  <h6 className=\"h6\">Visibilidade: {weatherForecast.current.vis_km} Km</h6>\r\n                  <h6 className=\"h6\">Pressão: {weatherForecast.current.pressure_mb} hPa</h6>\r\n                </div>\r\n                  \r\n\r\n              </div>\r\n              \r\n            ) : null\r\n          }\r\n        </div>\r\n      </main>\r\n\r\n    </div>\r\n    \r\n  );\r\n}\r\n\r\nexport default App;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n"],"sourceRoot":""}